%-----------------------------------------------------------
% Helpers

% From [this answer by @DavidCarlisle](https://tex.stackexchange.com/a/708876/64441).
\newcommand\notwhite{black}
\newcommand\notblack{white}

% From [this answer by @Skillmon](https://tex.stackexchange.com/a/708866/64441).
\ExplSyntaxOn
  \cs_new_eq:NN \ifStrEq \str_if_eq:nnTF
\ExplSyntaxOff

\newcounter{moveCounter}
\setcounter{moveCounter}{1}

\newcommand{\stepMoveCounter}{
  \stepcounter{moveCounter}
}

% From [this answer by @DavidCarlisle](https://tex.stackexchange.com/a/708893/64441).
\ExplSyntaxOn
  \cs_generate_variant:Nn \int_from_alph:n {e}

  \newcommand\stringToCoordX[1]{
    \int_from_alph:e{\use_i:nn#1}
  }
  \newcommand\stringToCoordY[1]{
    \boardSize + 1 - ~\int_from_alph:e{\use_ii:nn#1}
  }
\ExplSyntaxOff

%-----------------------------------------------------------
% Labels

% Parameters:
%
% 1: Color
%
% Example usage: `\triangleLabel{black}`
\newcommand{\triangleLabel}[1]{
  \pgfmathsetmacro{\triangleYCoord}{\yCoord - \stoneRadius * 0.075}
  \pgfmathsetmacro{\triangleSize}{\stoneRadius * 30}

  \draw (\xCoord, \triangleYCoord) node[
    isosceles triangle,
    draw = \UseName{not#1},
    fill = #1, 
    rotate = 90,
    isosceles triangle apex angle = 60,
    inner sep = 0pt,
    minimum height = \triangleSize,
    minimum width = \triangleSize,
  ] {};
}

% Parameters:
%
% 1: Color
%
% Example usage: `\squareLabel{black}`
\newcommand{\squareLabel}[1]{
  \pgfmathsetmacro{\squareSize}{\stoneRadius * 30}

  \draw (\xCoord, \yCoord) node[
    draw = \UseName{not#1},
    fill = #1, 
    inner sep = 0pt,
    minimum size = \squareSize,
  ] {}; 
}

% Parameters:
%
% 1: Color
%
% Example usage: `\circleLabel{black}`
\newcommand{\circleLabel}[1]{
  \pgfmathsetmacro{\circleSize}{\stoneRadius * 0.5}

  \draw[
    draw = \UseName{not#1},
    fill = #1, 
    line width = \outlineWidth
  ]
    (\xCoord, \yCoord)
    circle [radius = \circleSize];
}

% Parameters:
%
% 1: Color
%
% Example usage: `\crossLabel{black}`
\newcommand{\crossLabel}[1]{
  \draw (\xCoord, \yCoord) 
    node[
      color = \UseName{not#1},
      font = \sffamily,
    ] {X};
}

% Parameters:
%
% 1: Color
% 2: Text
%
% Example usage: `\crossLabel{black}{A}`
\newcommand{\textLabel}[2]{
  \draw (\xCoord, \yCoord)
    node[
      % TODO: Change fontsize if the number goes beyond 99.
      color = \UseName{not#1},
    ] {#2};
}

%-----------------------------------------------------------
% Drawing Moves and Stones

% Parameters
%
% 1: stone color (black or white)
% 2: X Coordinate
% 3: Y Coordinate
% 
% Example: `\drawStone{black}{2}{3}`
\newcommand{\drawStone}[3]{
  \pgfmathsetmacro{\xCoord}{\step * (#2 - 1)}
  \pgfmathsetmacro{\yCoord}{\step * (#3 - 1)}
  \pgfmathsetmacro{\outlineWidth}{\step / 20}
  \pgfmathsetmacro{\stoneRadius}{\step * \ifStrEq{black}{#1}{0.99}{0.95} / 2}

  \draw[
    draw = \UseName{not#1},
    fill = #1, 
    line width = \outlineWidth
  ]
    (\xCoord, \yCoord)
    circle [radius = \stoneRadius];
}

\pgfkeys{/phili/stone/.cd, 
  color/.store in = \stoneColor,
  x/.store in     = \stoneXCoord,
  y/.store in     = \stoneYCoord,
  color           = black,
  x               = 0,
  y               = 0,
}

% Parameters
%
% - color
% - x coordinate
% - y coordinate
% 
% Example:
%
% ```tex
% \stone[color = black,
%        x     = 3,
%        y     = 3]
% ```
\newcommand{\stone}[1][]{
  \pgfkeys{/phili/stone/.cd, #1}

  \drawStone{\stoneColor}{\stoneXCoord}{\stoneYCoord}
}

% Parameters
%
% 1: stone color (black or white)
% 2: X Coordinate
% 3: Y Coordinate
% 
% Example: `\drawMove{black}{2}{3}`
\newcommand{\drawMove}[3]{
  \drawStone{#1}{#2}{#3}
  \textLabel{#1}{\themoveCounter}

  \stepMoveCounter
}

% Parameters
%
% - color
% - x coordinate
% - y coordinate
% 
% Example:
%
% ```tex
% \move[color = black,
%        x     = 3,
%        y     = 3]
% ```
\newcommand{\move}[1][]{
  \pgfkeys{/phili/stone/.cd, #1}

  \drawMove{\stoneColor}{\stoneXCoord}{\stoneYCoord}
}

%-----------------------------------------------------------
% Draw from SGF Coords

% It works with both lower and uppercase coordinates.
%
% Parameters
%
% 1: stone color (black or white)
% 2: SGF Coordinates
% 
% Example: `\drawStoneFromSgfCoords{black}{ab}`
\newcommand{\drawStoneFromSgfCoords}[2]{
  \drawStone{#1}{\stringToCoordX{#2}}{\stringToCoordY{#2}}
}

% It works with both lower and uppercase coordinates.
%
% Parameters
%
% 1: move color (black or white)
% 2: SGF Coordinates
% 
% Example: `\drawMoveFromSgfCoords{black}{ab}`
\newcommand{\drawMoveFromSgfCoords}[2]{
  \drawMove{#1}{\stringToCoordX{#2}}{\stringToCoordY{#2}}
}

% From [this answer by @JasperHabicht](https://tex.stackexchange.com/a/708961/64441).
%
% Parameters
%
% 1: array of {<black | white>, <coordinates}
%
% Example usage: `drawStonesFromSgfCoords{{black, ab}, {white, cd}}`
\ExplSyntaxOn
  \NewExpandableDocumentCommand{\drawStonesFromSgfCoords}{ m }{
    \clist_set:Nn \l_tmpa_clist { #1 }
    \clist_map_inline:Nn \l_tmpa_clist {
      \clist_set:Nn \l_tmpb_clist { ##1 }
      \clist_pop:NN \l_tmpb_clist \l_tmpa_tl 
      \clist_pop:NN \l_tmpb_clist \l_tmpb_tl 
      \exp_args:Noo \drawStoneFromSgfCoords { \l_tmpa_tl } { \l_tmpb_tl }
    }
  }
\ExplSyntaxOff

% From [this answer by @JasperHabicht](https://tex.stackexchange.com/a/708961/64441).
%
% Parameters
%
% 1: array of {<black | white>, <coordinates}
%
% Example usage: `drawMovesFromSgfCoords{{black, ab}, {white, cd}}`
\ExplSyntaxOn
  \NewExpandableDocumentCommand{\drawMovesFromSgfCoords}{ m }{
    \clist_set:Nn \l_tmpa_clist { #1 }
    \clist_map_inline:Nn \l_tmpa_clist {
      \clist_set:Nn \l_tmpb_clist { ##1 }
      \clist_pop:NN \l_tmpb_clist \l_tmpa_tl 
      \clist_pop:NN \l_tmpb_clist \l_tmpb_tl 
      \exp_args:Noo \drawMoveFromSgfCoords { \l_tmpa_tl } { \l_tmpb_tl }
    }
  }
\ExplSyntaxOff

%-----------------------------------------------------------
